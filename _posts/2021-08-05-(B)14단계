---
title:  "[Baekjoon] - 14단계 : 동적계획법 1"
excerpt: "Dynamic Programming"


categories:
  - Baekjoon
tags:
  - c
  - algorithm
last_modified_at: 2021-08-05T08:06:00-05:00

---

### 1. 피보나치 함수

```c
#include <stdio.h>
 
void fibonacci(int N)
{
    int last, current, result;
    current=1, last = result = 0;
    int i;
    for (i = 0; i <=N; i++)
    {
        last = current;
        current = result;
        result = last + current;
    }
    printf("%d %d\n", last, current);
}
int main()
{
    int N,M;
    int i;
    scanf("%d", &N);
    for (i = 0; i < N; i++)
    {
        scanf("%d", &M);
        fibonacci(M);
    }
}
```

### 2. 신나는 함수 실행

```c
#include <stdio.h>

int memo[101][101][101] = {0,};

int w(int a, int b, int c){
    
    if(a < 1 || b < 1 || c < 1) return 1;
    
    else if(a > 20 || b > 20 || c > 20) return memo[a][b][c] = w(20,20,20);
    
    //이미 값이 있으면 저장된 값만 불러오기
    else if(memo[a][b][c] != 0) return memo[a][b][c];
    
    //값이 0(값을 저장한 적 없으면) memo배열에 저장하고 반환
    else if(a < b && b < c)
        return memo[a][b][c] = w(a,b,c-1)+w(a,b-1,c-1)-w(a,b-1,c);
    
    else
        return memo[a][b][c] = w(a-1, b, c) + w(a-1, b-1, c) + w(a-1, b, c-1) - w(a-1, b-1, c-1);
}

int main(){
    int n1 = 0;
    int n2 = 0;
    int n3 = 0;
    
    
    while(scanf("%d %d %d",&n1,&n2,&n3)){
        if(n1 == -1 && n2 == -1 && n3 == -1) break;
        
        printf("w(%d, %d, %d) = %d\n",n1,n2,n3,w(n1,n2,n3));
    }
}
```
### 요약

- 2번은 메모이제이션으로 주석설명.
